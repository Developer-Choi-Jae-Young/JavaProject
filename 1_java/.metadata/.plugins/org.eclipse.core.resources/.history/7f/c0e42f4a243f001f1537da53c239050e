package kh.study.cjy.etc;

import java.nio.charset.StandardCharsets;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.util.Base64;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.spec.IvParameterSpec;

public class AESCrypto {
	public static SecretKey KEY = null;
	public static IvParameterSpec IV = null;
	
	
	/**
     * 키 반환
     */
    public static SecretKey getKey() {     
        return KEY;
    }
    
	 /**
     * 키 생성
     */
    public static void generateKey() throws NoSuchAlgorithmException {
        KeyGenerator keyGenerator = KeyGenerator.getInstance("AES");
        keyGenerator.init(128);
        KEY = keyGenerator.generateKey();       
    }
    
    /**
     * 초기화 벡터 생성
     */
    public static void generateIV() {
        byte[] iv = new byte[16];
        new SecureRandom().nextBytes(iv);
        IV = new IvParameterSpec(iv);
    }
	
    /**
     * 초기화 벡터 반환
     */
    public static IvParameterSpec getIv() {
        return IV;
    }
    
    public static String encrypt(String specName, SecretKey key, IvParameterSpec iv,
    		String plainText) throws NoSuchAlgorithmException, NoSuchPaddingException, 
    								InvalidKeyException, InvalidAlgorithmParameterException,
    								IllegalBlockSizeException, BadPaddingException {
    		Cipher cipher = Cipher.getInstance(specName);
    		cipher.init(Cipher.ENCRYPT_MODE, key, iv);
    		byte[] encrypted = cipher.doFinal(plainText.getBytes(StandardCharsets.UTF_8));
    		return new String(Base64.getEncoder().encode(encrypted));
    	}

    	public static String decrypt(String specName, SecretKey key, IvParameterSpec iv,
    		String cipherText) throws NoSuchAlgorithmException, NoSuchPaddingException, 
		InvalidKeyException, InvalidAlgorithmParameterException,
		IllegalBlockSizeException, BadPaddingException {
    		Cipher cipher = Cipher.getInstance(specName);
    		cipher.init(Cipher.DECRYPT_MODE, key, iv); // 모드가 다르다.
    		byte[] decrypted = cipher.doFinal(Base64.getDecoder().decode(cipherText));
    		return new String(decrypted, StandardCharsets.UTF_8);
    	}
}
