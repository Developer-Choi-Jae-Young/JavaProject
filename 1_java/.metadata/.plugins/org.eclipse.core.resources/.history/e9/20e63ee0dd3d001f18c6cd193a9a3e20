package database;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;

public class Functional {
	protected ResultSet rs;
	protected Statement stmt;
	protected PreparedStatement pstmt;
	
	public ResultSet CallSql(Connection conn, String strSql) {
		try {
			String[] strList = strSql.split(strSql);
			
			if(strList[0].toUpperCase().equals("SELECT")) {
				stmt = conn.createStatement();
				rs = stmt.executeQuery(strSql);
				Commit(conn);
			} else if(strList[0].toUpperCase().equals("INSERT") || 
					strList[0].toUpperCase().equals("UPDATE") || 
					strList[0].toUpperCase().equals("DELETE")){
				pstmt = conn.prepareStatement(strSql);
				pstmt.executeUpdate(); //INSERT/UPDATE/DELETE일때 return값이 int형이다 어떻게 처리할까? 
				Commit(conn);
			} 
			
		} catch (SQLException e) {
			e.printStackTrace();
			Rollback(conn);
		} finally {
			Close(rs);
			Close(stmt);
		}
		
		return rs;
	}
	
	public static void Close(Statement st) {
		try {
			st.close();			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public static void Close(ResultSet rs) {
		try {
			rs.close();			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public void Commit(Connection conn) {
		try {
			if(conn != null && !conn.isClosed()) {
				conn.commit();
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public void Rollback(Connection conn) {
		try {
			if(conn != null && !conn.isClosed()) {
				conn.rollback();
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
}
