package kh.study.cjy.dao;

import java.sql.Date;
import java.sql.SQLException;
import java.sql.Time;
import java.util.ArrayList;
import java.util.List;

import kh.study.cjy.database.DataSource;
import kh.study.cjy.database.Functional;
import kh.study.cjy.model.SelfStudy;
import kh.study.cjy.model.Student;
import kh.study.cjy.model.Teacher;
import kh.study.cjy.model.User;

public class SelfStudyDao extends Functional{
	/*
	 * User Table Create
	 */
	public List<User> selectUser() {
		List<User> userList = new ArrayList<User>();

		try {
			CallSqlSelect(DataSource.Connect(), "Select * from User;");
			
			while (rs.next()) {
				int id = rs.getInt("id");
				String userId = rs.getString("userid");
				String name = rs.getString("name");
				String password = rs.getString("password");
				int age = rs.getInt("age");
				char gender = rs.getString("gender").charAt(0);
				String phone = rs.getString("phone"); 
				String email = rs.getString("email");
				String type = rs.getString("type");
				
				switch (type) {
				case "Student" : 
					userList.add(new Student(id, userId, name, password, age, gender, phone, email, type, false));
					break;
				case "Teacher" :
					userList.add(new Teacher(id, userId, name, password, age, gender, phone, email, type, false));
					break;
				default:
					userList.add(new User(id, userId, name, password, age, gender, phone, email, type, false));
					break;
				}
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			Close(rs);
			Close(stmt);
		}

		return userList;
	}
	
	/*
	 * User Table Create
	 */
	public List<SelfStudy> selectSelfStudyFromUser(User u, String toDay) {
		List<SelfStudy> selfStudyList = new ArrayList<SelfStudy>();

		try {
			CallSqlSelect(DataSource.Connect(), "Select * from SelfStudy where student_id = " + u.getId() + " AND date = \"" + toDay + "\";");
			
			while (rs.next()) {
				int id = rs.getInt("id");
				int student = rs.getInt("student_id");
				Date date = rs.getDate("date");
				Time time = rs.getTime("time");
				
				selfStudyList.add(new SelfStudy(id, null, date, time, student));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			Close(rs);
			Close(stmt);
		}

		return selfStudyList;
	}
	
	/*
	 * User Table Data Insert
	 */
	public boolean insertSelfStudy(SelfStudy selfStudy) {
		boolean returnValue = false;

		if (CallSqlOther(DataSource.Connect(),
				"INSERT INTO SelfStudy (student_id, date, time) VALUES " + "(" + selfStudy.getStudent().getId() + ", \"" + selfStudy.getDate() + "\", \"" + selfStudy.getTime() + "\");") > 0) {
			
			returnValue = true;
		}

		return returnValue;
	}
}
